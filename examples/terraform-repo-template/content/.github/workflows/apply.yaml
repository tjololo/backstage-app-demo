name: Infra apply

on:
  push:
    branches:
      - main
    paths:
      - terraform/**
      - .github/workflows/apply.yaml

env:
  tf_actions_working_dir: terraform/

permissions:
  id-token: write
  contents: read

jobs:
  plan:
    name: Terraform apply
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.tf_actions_working_dir }}

    steps:
      - uses: actions/checkout@v4

      - name: Log in to Azure using OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_OIDC_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_OIDC_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_OIDC_SUBSCRIPTION_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        id: init
        run: terraform init
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_OIDC_CLIENT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_OIDC_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_OIDC_TENANT_ID }}
          ARM_USE_OIDC: true

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color --out=out.tfplan
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_OIDC_CLIENT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_OIDC_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_OIDC_TENANT_ID }}
          ARM_USE_OIDC: true

      - name: Apply the plan
        id: apply
        run: terraform apply -no-color -auto-approve out.tfplan
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_OIDC_CLIENT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_OIDC_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_OIDC_TENANT_ID }}
          ARM_USE_OIDC: true

      - name: Create the plan summary
        uses: actions/github-script@v7
        if: always()
        id: summary
        env:
          APPLY: "${{ steps.apply.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // 1. Prep the output
            const output = `#### Terraform Apply ðŸš—\`${{ steps.apply.outcome }}\`

            <details><summary>Show details</summary>

            \`\`\`\n
            ${process.env.APPLY}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;

            // 2. Set the output variable
            const fs = require('fs');
            fs.writeFileSync('${{ env.tf_actions_working_dir }}/summary.md', output);
            core.setOutput('summary', output);

      - name: Write the step summary
        if: always()
        run: cat summary.md >> $GITHUB_STEP_SUMMARY